#!/usr/bin/env bash

home=$HOME
tmux=$TMUX
mux_internal_run=$MUX_INTERNAL_RUN

set -o errexit
set -o nounset
set -o pipefail

args=()
ignore_template="0"

while [[ $# -gt 0 ]]; do
  case "expression" in
    -t|--ignore-template)
      ignore_template="1"
      ;;
    *)
      args+=("$1")
      ;;
  esac
  shift
done

function _enter_session() {
  if [[ ! -z $tmux ]]; then
    tmux switch-client -t $1
  else
    tmux attach-session -t $1
  fi
}

function _build_session_from_template() {
  local template=$1
  if [[ ! -f $template ]]; then
    tmux new-window -d
    return
  fi

  local idx=1
  cat .tmux.session.json | jq -r '.windows.list[].cmd' | while read -r cmd; do
    idx=$((idx + 1))
    tmux wait-for -L "mux_init_$idx"
    if [[ ! -z $cmd ]]; then
      tmux wait-for -L "mux_init_sync_$idx"
      tmux wait-for -L "mux_init_$idx" && tmux send-keys -t ":$idx.1" "$cmd" Enter && tmux wait-for -U "mux_init_$idx" && tmux wait-for -U "mux_init_sync_$idx" &
    fi
    tmux new-window -e "MUX_INIT_CHANNEL=mux_init_$idx" -d
  done

  tmux next-window

  idx=1
  cat .tmux.session.json | jq -r '.windows.list[].cmd' | while read -r cmd; do
    idx=$((idx + 1))
    if [[ ! -z $cmd ]]; then
      tmux wait-for -L "mux_init_sync_$idx"
      tmux wait-for -U "mux_init_sync_$idx"
    fi
  done
}

function _new_session() {
  if [[ $# -eq 1 ]]; then
    selected=$(realpath $1)
  else
    selected=$(find $home/work/*/* $home/work/* $home/personal/* $home/personal/*/* $home/.* -mindepth 1 -maxdepth 1 -type d -name .git | rev | cut -d'/' -f2- | rev | cut -d'/' -f4- | uniq | fzf)
    if [[ -z $selected ]];then
      exit 0
    fi
    selected="$home/$selected"
  fi

  if [[ -z $selected ]]; then
    exit 0
  fi

  prefix=""
  if [[ $(dirname $(dirname $selected)) == "$home/work" ]];then
    prefix="$(basename $(dirname $selected))/"
  fi
  name="$prefix$(basename $selected)"
  name=$(echo $name | tr . _)

  if tmux has-session -t $name 2> /dev/null; then
    _enter_session $name
    exit 0
  fi

  if [[ $ignore_template == "1" ]]; then
    tmux new-session -ds $name -c $selected
  else
    tmux new-session -ds $name -c $selected sh -c "MUX_INTERNAL_RUN=1 mux _build_session '$selected/.tmux.session.json'"
  fi
  _enter_session $name
}

if [[ $mux_internal_run == "1" ]]; then
  case "${args[0]}" in
    _build_session) _build_session_from_template ${args[1]} ;;
    *) exit 1
  esac
  exit 0
fi

if [[ ${#args[@]} -eq 0 ]]; then
  _new_session
fi

if [[ ${#args[@]} -eq 1 ]]; then
  _new_session "${args[0]}"
fi
